package views

import "nimblestack/views/components"

templ CoordinatorDash() {
@Base("Dashboard", coordinatorDashPage())
}

templ coordinatorDashPage() {
<div class="min-h-screen flex bg-gray-500">
  <!-- Sidebar Navigation -->
  @components.SideBar("Dashboard", sidebarList())
  <!-- Main Content Area -->
  <main class="flex-1 p-10" x-data="userData()" x-init="fetchUser()">
    <div class="flex justify-between items-center mb-8">
      <!-- The greeting now displays the fetched user's name -->
      <h1 class="text-3xl font-bold text-white"
        x-text="'Welcome, ' + (user.firstname ? user.firstname + ' ' + user.lastname : 'Guest') + '!'"></h1>
      <button @click="fetchUser()" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 transition">
        Refresh
      </button>
    </div>
    <!-- Additional user details -->
    <div class="bg-gray-500 p-6 rounded shadow">
      <p x-text="'Email: ' + user.email"></p>
      <p x-text="'Role: ' + user.role"></p>
    </div>
    <div x-data="studentsData()" x-init="fetchStudents()">
      <template x-for="student in students" :key="student.Id">
        <div class="bg-gray-600 p-4 mt-2 rounded shadow">
          <p x-text="'Name: ' + student.Firstname + ' ' + student.Lastname"></p>
          <p x-text="'Email: ' + student.Email"></p>
          <div x-data="supervisorsData()" x-init="fetchSupervisors">
            <form hx-post="/api/coordinator/assign" hx-trigger="submit" hx-swap="outerHTML" hx-target="closest div">
              <input type="hidden" name="studentId" :value="student.Id" />
              <select name="supervisorId">
                <option value="">Select Supervisor</option>
                <template x-for="supervisor in supervisors" :key="supervisor.Id">
                  <option x-text="supervisor.Firstname + ' ' + supervisor.Lastname" :value="supervisor.Id"></option>
                </template>
              </select>
              <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 transition">
                Assign
              </button>
              <div hx-swap-oob="true" class="text-green-500"></div>
            </form>
          </div>
        </div>
      </template>
    </div>
  </main>
</div>
<!-- AlpineJS component for fetching user data -->
<script>
  function userData() {
    return {
      user: {},
      async fetchUser() {
        try {
          const response = await fetch('/api/me');
          const data = await response.json();
          this.user = data;
        } catch (error) {
          console.error('Error fetching user data:', error);
        }
      }
    }
  }
  function studentsData() {
    return {
      students: [],
      async fetchStudents() {
        try {
          const response = await fetch('/api/coordinator/students')
          const data = await response.json();
          this.students = data;
        } catch (error) {
          console.error('Error fetching students data: ', error);
        }
      }
    }
  }
  function supervisorsData() {
    return {
      supervisors: [],
      async fetchSupervisors() {
        try {
          const response = await fetch('/api/coordinator/supervisors')
          const data = await response.json();
          this.supervisors = data;
        } catch (error) {
          console.error("Error with fetching supervisors data: ", error)
        }
      }
    }
  }
</script>
}
